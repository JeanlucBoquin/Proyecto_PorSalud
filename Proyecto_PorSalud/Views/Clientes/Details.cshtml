@model Proyecto_PorSalud.Models.Cliente
@{
    ViewBag.Title = "Detalle de cliente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="d-flex justify-content-between align-items-center mb-3">
    <h3>Cliente #@Model.Id</h3>
    <div>
        <a class="btn btn-outline-secondary" href="@Url.Action("Index")">Volver</a>
        <a class="btn btn-outline-primary" href="@Url.Action("Documentos", new { id = Model.Id })">Ver documentos</a>
    </div>
</div>

<div class="row">
    <div class="col-lg-7">
        <div class="card shadow-sm">
            <div class="card-header">Datos (editable)</div>
            <div class="card-body">
                <form id="frmEdit" method="post" action="@Url.Action("Edit")">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">Identificación</label>
                            @Html.TextBoxFor(m => m.Identificacion, new { @class = "form-control", required = "required" })
                        </div>
                        <div class="col-md-8">
                            <label class="form-label">Nombre completo</label>
                            @Html.TextBoxFor(m => m.NombreCompleto, new { @class = "form-control", required = "required" })
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Dirección</label>
                            @Html.TextBoxFor(m => m.Direccion, new { @class = "form-control" })
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Teléfono</label>
                            @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control" })
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Celular</label>
                            @Html.TextBoxFor(m => m.Celular, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Correo</label>
                            @Html.TextBoxFor(m => m.Correo, new { @class = "form-control", type = "email" })
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Sexo</label>
                            @Html.DropDownListFor(m => m.Sexo, new SelectList(new[] { "M", "F" }, Model.Sexo), null, new { @class = "form-select" })
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Activo</label><br />
                            <div class="form-check form-switch">
                                @Html.CheckBoxFor(m => m.Activo, new { @class = "form-check-input" })
                                <label class="form-check-label">Activo</label>
                            </div>
                        </div>
                    </div>
                    <div class="mt-3 d-flex gap-2">
                        <button class="btn btn-primary" type="submit">Guardar cambios</button>
                        <button id="btnEliminar" class="btn btn-danger" type="button">Eliminar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-lg-5">
        <div class="card shadow-sm">
            <div class="card-header">Subir documento PDF (asíncrono)</div>
            <div class="card-body">
                <form id="frmPdf" enctype="multipart/form-data">
                    <input type="hidden" name="clienteId" value="@Model.Id" />
                    <input type="file" name="file" class="form-control mb-2" accept="application/pdf" />
                    <button class="btn btn-outline-primary" type="submit">Cargar PDF</button>
                </form>
                <div class="small text-muted mt-2">Solo se aceptan archivos .pdf</div>
            </div>
        </div>
    </div>
</div>

<!-- Modal confirmación eliminar -->
<div class="modal" tabindex="-1" id="mdlEliminar">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Confirmar eliminación</h5></div>
            <div class="modal-body"><p>¿Seguro que deseas eliminar este cliente?</p></div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button id="btnConfirmDel" class="btn btn-danger">Eliminar</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
$("#frmEdit").on("submit", function(e){
  e.preventDefault();
  $.post(this.action, $(this).serialize())
   .done(()=> alert("Guardado"))
   .fail(xhr=> alert(xhr.statusText));
});

$("#btnEliminar").on("click", function(){
  new bootstrap.Modal(document.getElementById('mdlEliminar')).show();
});

$("#btnConfirmDel").on("click", function(){
  $.post("/Clientes/Delete", { id: @Model.Id })
   .done(()=> window.location="/Clientes/Index")
   .fail(()=> alert("Error al eliminar"));
});

$("#frmPdf").on("submit", function(e){
  e.preventDefault();
  var fd = new FormData(this);
  $.ajax({
    url: "/Clientes/UploadPdf",
    method: "POST",
    data: fd, processData: false, contentType: false
  }).done(()=> alert("PDF cargado"))
    .fail(xhr=> alert(xhr.responseText || "Error"));
});
    </script>
}
